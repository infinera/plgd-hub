events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    /nginx/mime.types;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent"';

  access_log /dev/stdout;
  error_log /dev/stdout warn;
  server {
    listen REPLACE_NGINX_PORT ssl http2;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    server_name          _;
    ssl_certificate     /data/certs/external/endpoint.crt;
    ssl_certificate_key /data/certs/external/endpoint.key;
    proxy_ssl_name localhost;
    location ~ ^(/authorize|/oauth/token|/.well-known/jwks.json|/.well-known/openid-configuration|/v2/logout|/authorize/userinfo|/authorize/unauthorized) {
      set $upstream_oauth_server https://127.0.0.1:REPLACE_MOCK_OAUTH_SERVER_PORT;
      proxy_pass                     $upstream_oauth_server;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.oauth.conf;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Forwarded-Host $host;
      proxy_set_header Host $host;
    }
    location ~ ^(/m2m-oauth-server) {
      set $upstream_oauth_server https://127.0.0.1:REPLACE_HTTP_M2M_OAUTH_SERVER_PORT;
      proxy_pass                     $upstream_oauth_server;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.oauth.conf;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Forwarded-Host $host;
      proxy_set_header Host $host;
    }
    location ~ ^(/m2moauthserver.pb.M2MOAuthService) {
      set $upstream_grpc_oauth_server grpcs://127.0.0.1:REPLACE_M2M_OAUTH_SERVER_PORT;
      grpc_pass                      $upstream_grpc_oauth_server;
      grpc_ssl_certificate           /data/certs/internal/endpoint.crt;
      grpc_ssl_certificate_key       /data/certs/internal/endpoint.key;
      grpc_ssl_trusted_certificate   /data/certs/root_ca.crt;
      grpc_read_timeout       31536000s;
      grpc_send_timeout       31536000s;
      client_body_timeout     31536000s;
      grpc_socket_keepalive   on;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
    }
    location ~ ^(/certificateauthority.pb.CertificateAuthority) {
      set $upstream_grpc_gateway grpcs://127.0.0.1:REPLACE_CERTIFICATE_AUTHORITY_PORT;
      grpc_pass                      $upstream_grpc_gateway;
      grpc_ssl_certificate           /data/certs/internal/endpoint.crt;
      grpc_ssl_certificate_key       /data/certs/internal/endpoint.key;
      grpc_ssl_trusted_certificate   /data/certs/root_ca.crt;
      grpc_read_timeout       31536000s;
      grpc_send_timeout       31536000s;
      client_body_timeout     31536000s;
      grpc_socket_keepalive   on;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
    }
    location ~ ^(/grpcgateway.pb.GrpcGateway) {
      set $upstream_grpc_gateway grpcs://127.0.0.1:REPLACE_GRPC_GATEWAY_PORT;
      grpc_pass                      $upstream_grpc_gateway;
      grpc_ssl_certificate           /data/certs/internal/endpoint.crt;
      grpc_ssl_certificate_key       /data/certs/internal/endpoint.key;
      grpc_ssl_trusted_certificate   /data/certs/root_ca.crt;
      grpc_read_timeout       31536000s;
      grpc_send_timeout       31536000s;
      client_body_timeout     31536000s;
      grpc_socket_keepalive   on;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
    }
    location ~ ^/c2c/gw(.*)$ {
      set $upstream_c2c_gateway https://127.0.0.1:REPLACE_CLOUD2CLOUD_GATEWAY_PORT;
      rewrite           ^/c2c/gw/(.*) /$1 break;
      proxy_pass                     $upstream_c2c_gateway;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.conf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
    location ~ ^/c2c/connector(.*)$ {
      set $upstream_c2c_connector https://127.0.0.1:REPLACE_CLOUD2CLOUD_CONNECTOR_PORT;
      rewrite           ^/c2c/connector/(.*) /$1 break;
      proxy_pass                     $upstream_c2c_connector;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.conf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
    location ~ ^(/certificate-authority|/api/v1/sign) {
      set $upstream_certificate_authority https://127.0.0.1:REPLACE_HTTP_CERTIFICATE_AUTHORITY_PORT;
      proxy_pass                     $upstream_certificate_authority;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.conf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
    location ~ ^(/snippet-service) {
      set $upstream_snippet_service https://127.0.0.1:REPLACE_HTTP_SNIPPET_SERVICE_PORT;
      proxy_pass                     $upstream_snippet_service;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.conf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
    location ~ ^(/grpc.reflection.v1alpha.ServerReflection|/grpc.reflection.v1.ServerReflection) {
      set $upstream_grpc_gateway grpcs://127.0.0.1:REPLACE_GRPC_REFLECTION_PORT;
      grpc_pass                      $upstream_grpc_gateway;
      grpc_ssl_certificate           /data/certs/internal/endpoint.crt;
      grpc_ssl_certificate_key       /data/certs/internal/endpoint.key;
      grpc_ssl_trusted_certificate   /data/certs/root_ca.crt;
      grpc_read_timeout       31536000s;
      grpc_send_timeout       31536000s;
      client_body_timeout     31536000s;
      grpc_socket_keepalive   on;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
    }
    location ~ ^(/device-provisioning-service|/api/v1/provisioning-records|/api/v1/enrollment-groups|/api/v1/hubs) {
      set $upstream_oauth_server https://127.0.0.1:REPLACE_HTTP_DEVICE_PROVISIONG_SERVICE_PORT;
      proxy_pass                     $upstream_oauth_server;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.oauth.conf;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Forwarded-Host $host;
      proxy_set_header Host $host;
    }
    location ~ ^/ {
      set $upstream_http_gateway https://127.0.0.1:REPLACE_HTTP_GATEWAY_PORT;
      proxy_pass                     $upstream_http_gateway;
      proxy_ssl_certificate           /data/certs/internal/endpoint.crt;
      proxy_ssl_certificate_key       /data/certs/internal/endpoint.key;
      proxy_ssl_trusted_certificate   /data/certs/root_ca.crt;
      proxy_ssl_verify                on;
      set $cors_headers 'Authority,Method,Path,Scheme,Accept,Accept-Encoding,Accept-Language,Content-Type,Origin,Refer,Sec-Fetch-Dest,Sec-Fetch-Mode,Sec-Fetch-Site,Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,correlation-id';
      include /nginx/cors.conf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
  }
}